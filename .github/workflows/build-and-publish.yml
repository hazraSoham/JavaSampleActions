name: Build and Publish maven package

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: "Project to build (projectA or projectB)"
        required: true
        default: "projectA"
        type: choice
        options:
        - projectA
        - projectB
      release_option:
        description: "Choose Action"
        required: true
        default: "NONE"
        type: choice
        options:
          - RELEASE
          - DRY_RUN
          - NONE

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Java
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21 # Adjust to your Java version
          distribution: 'temurin'
          cache: maven

      - name: Build Project
        run: |
          cd ${{ github.event.inputs.project_name }}
          if [ "${{ github.event.inputs.release_option }}" == "Release" ]; then
            mvn clean package -DskipTests
          else
            mvn clean verify
          fi

      # Configure Git for GITHUB_TOKEN
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
    
      - name: Prepare for Release
        if: ${{ github.event.inputs.release_option == 'Release' }}
        run: |
          mkdir -p release
          cp ${{ github.event.inputs.project_name }}/target/*.jar release/
    
      - name: Create GitHub Release
        if: ${{ github.event.inputs.release_option == 'Release' }}
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }} # Use the current tag or generate one
          release_name: "Release ${{ github.ref_name }}"
          body: "Automated release for ${{ github.event.inputs.project_name }}"
          draft: false
          prerelease: false
          generate_release_notes: true
    
      - name: Upload Release Asset
        if: ${{ github.event.inputs.release_option == 'Release' }}
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/*.jar
          asset_name: ${{ github.event.inputs.project_name }}.jar
          asset_content_type: application/java-archive
